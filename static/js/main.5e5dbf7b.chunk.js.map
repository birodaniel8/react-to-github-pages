{"version":3,"sources":["actions/types.js","reducers/card.js","reducers/data.js","reducers/index.js","store.js","components/cards/GetFunctions.js","actions/card.js","components/cards/Character.js","components/CardSelector.js","components/App.js","actions/data.js","components/Root.js","index.js"],"names":["SET_CARD","LOAD_DATA","initialState","selectedCard","type","id","data","movies","characters","planets","species","spaceships","vehicles","combineReducers","card","state","action","payload","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","getMovie","url","filter","movie","title","getPlanet","planet","name","getSpecies","setCard","cardType","selectedId","dispatch","connect","selected","c","console","log","Object","entries","map","entry","length","every","item","Button","variant","onClick","homeworld","films","gender","skin_color","loadData","useState","allLoaded","setAllLoaded","useEffect","fetch","process","then","response","json","className","LinearProgress","value","color","disabled","Math","floor","random","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e5dbf7b.chunk.js","sourcesContent":["export const SET_CARD = \"SET_CARD\";\r\nexport const LOAD_DATA = \"LOAD_DATA\";","/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_CARD } from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  selectedCard: {\r\n    type: null,\r\n    id: null,\r\n  },\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CARD:\r\n      return {\r\n        ...state,\r\n        selectedCard: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { LOAD_DATA } from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  data: {\r\n    movies: [],\r\n    characters: [],\r\n    planets: [],\r\n    species: [],\r\n    spaceships: [],\r\n    vehicles: [],\r\n  },\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_DATA:\r\n      return {\r\n        ...state,\r\n        data: {...state.data, ...action.payload},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport card from \"./card\"\r\nimport data from \"./data\"\r\n\r\nexport default combineReducers({\r\n  card,\r\n  data,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)),\r\n);\r\n\r\nexport default store;","export const getMovie = (url, data) => {\r\n  return data.movies.filter((movie) => movie.url === url)[0].title;\r\n};\r\n\r\nexport const getCharacter = (url, data) => {\r\n  return data.characters.filter((character) => character.url === url)[0].name;\r\n};\r\n\r\nexport const getPlanet = (url, data) => {\r\n  return data.planets.filter((planet) => planet.url === url)[0].name;\r\n};\r\n\r\nexport const getSpecies = (url, data) => {\r\n  if (url) {\r\n    return data.species.filter((species) => species.url === url)[0].name;\r\n  } else {\r\n    return \"Human\"\r\n  }\r\n};\r\n\r\nexport const getSpaceship = (url, data) => {\r\n  return data.spaceships.filter((spaceship) => spaceship.url === url)[0].name;\r\n};\r\n\r\nexport const getVehicle = (url, data) => {\r\n  return data.vehicles.filter((vehicle) => vehicle.url === url)[0].name;\r\n};\r\n","import { SET_CARD } from \"../actions/types.js\";\r\n\r\n// Set card:\r\nexport const setCard = (cardType, selectedId) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_CARD,\r\n    payload: {\r\n      type: cardType,\r\n      id: selectedId,\r\n    },\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { getPlanet, getSpecies, getMovie } from \"./GetFunctions\"\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { setCard } from \"../../actions/card\";\r\n\r\nconst Character = ({ selected, data, setCard }) => {\r\n  const c = data.characters[selected];\r\n  console.log(c);\r\n\r\n\r\n  if (Object.entries(data)\r\n  .map((entry) => entry[1].length)\r\n  .every((item) => item > 0)) {\r\n    return (\r\n      <div>\r\n        <h1>{c.name}</h1>\r\n        <p>\r\n          <b>Homeworld:</b> <Button variant=\"contained\" onClick={() => setCard(\"planet\", 1)}>{getPlanet(c.homeworld, data)}</Button>\r\n        </p>\r\n        <p>\r\n          <b>Species:</b> <Button variant=\"contained\">{getSpecies(c.species[0], data)}</Button>\r\n        </p>\r\n        <p>\r\n          <b>Movies:</b> {c.films.map(movie => <Button variant=\"contained\">{getMovie(movie, data)}</Button>)}\r\n        </p>\r\n        <p>\r\n          <b>Gender:</b> {c.gender}\r\n        </p>\r\n        <p>\r\n          <b>Skin color:</b> {c.skin_color}\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\n\r\n// PropTypes:\r\nCharacter.propTypes = {\r\n  selected: PropTypes.number.isRequired,\r\n  setCard: PropTypes.func.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {setCard})(Character);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport Character from \"./cards/Character\"\r\n\r\nconst CardSelector = ({selectedCard, data}) => {\r\n  console.log(selectedCard.type)\r\n  switch (selectedCard.type) {\r\n    case \"character\":\r\n      return <Character data={data} selected={selectedCard.id}/>;\r\n    case \"planet\":\r\n      return <div>This is a planet</div>\r\n    default:\r\n      return <div>Nothing has been selected</div>;\r\n  }\r\n};\r\n\r\n// PropTypes:\r\nCardSelector.propTypes = {\r\n  selectedCard: PropTypes.object.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  selectedCard: state.card.selectedCard,\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(CardSelector);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { LinearProgress, Button } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\nimport CardSelector from \"./CardSelector\"\r\n\r\nimport { setCard } from \"../actions/card\";\r\nimport { loadData } from \"../actions/data\";\r\n\r\nconst App = ({ data, selectedCard, setCard, loadData }) => {\r\n  const [allLoaded, setAllLoaded] = useState(false);\r\n\r\n  const loadAllData = () => {\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/films.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({movies: response[\"items\"]})\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/people.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({characters: response[\"items\"]})\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/planets.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({planets: response[\"items\"]})\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/species.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({species: response[\"items\"]})\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/starships.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({spaceships: response[\"items\"]})\r\n      });\r\n    fetch(`${process.env.PUBLIC_URL}/sw_api_data/vehicles.json`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        loadData({vehicles: response[\"items\"]})\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setAllLoaded(\r\n      Object.entries(data)\r\n        .map((entry) => entry[1].length)\r\n        .every((item) => item > 0)\r\n    );\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <LinearProgress\r\n        variant=\"determinate\"\r\n        value={allLoaded === true ? 100 : 0}\r\n      />\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        disabled={!allLoaded}\r\n        onClick={() => setCard(\"character\", Math.floor(Math.random() * 82))}\r\n      >\r\n        Random character\r\n      </Button>\r\n\r\n      <CardSelector />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n// PropTypes:\r\nApp.propTypes = {\r\n  selectedCard: PropTypes.object.isRequired,\r\n  setCard: PropTypes.func.isRequired,\r\n  loadData: PropTypes.func.isRequired,\r\n};\r\n\r\n// mapStateToProps:\r\nconst mapStateToProps = (state) => ({\r\n  selectedCard: state.card.selectedCard,\r\n  data: state.data.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCard, loadData })(App);\r\n","import { LOAD_DATA } from \"../actions/types.js\";\r\n\r\n// async function loadMovies(data) {\r\n//   fetch(`${process.env.PUBLIC_URL}/sw_api_data/films.json`)\r\n//     .then((response) => response.json())\r\n//     .then((response) => {\r\n//       return { ...data, movies: response[\"items\"] };\r\n//     });\r\n// }\r\n\r\n// Set Data:\r\nexport const loadData = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: LOAD_DATA,\r\n    payload: data,\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\"; // wrap this around everything for redux\r\nimport store from \"../store\";\r\nimport App from \"./App\";\r\n\r\nconst Root = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <div>\r\n        <App />\r\n      </div>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './components/Root';\r\n\r\nReactDOM.render(\r\n    <Root />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}