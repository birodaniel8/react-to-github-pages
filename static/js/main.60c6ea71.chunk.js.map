{"version":3,"sources":["App.js","index.js"],"names":["App","useState","moviesLoaded","charactersLoaded","planetsLoaded","speciesLoaded","starshipsLoaded","vehiclesLoaded","progress","useEffect","fetch","process","then","response","json","console","log","className","LinearProgress","variant","value","ReactDOM","render","document","getElementById"],"mappings":"uPAoPeA,EAhPH,WACV,IAQA,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KACA,GADA,KACgDD,oBAAS,IAAzD,mBAAOE,EAAP,KACA,GADA,KAC0CF,oBAAS,IAAnD,mBAAOG,EAAP,KACA,GADA,KAC0CH,oBAAS,IAAnD,mBAAOI,EAAP,KACA,GADA,KAC8CJ,oBAAS,IAAvD,mBAAOK,EAAP,KACA,GADA,KAC4CL,oBAAS,IAArD,mBAAOM,EAAP,KAEA,GAFA,KAEgCN,mBAAS,IAAzC,mBAAOO,EAAP,UAmNA,OAdAC,qBAAU,WACRC,MAAM,GAAD,OAAIC,yBAAJ,gBACFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIE,QAAQC,IAAIH,QAS/B,IAGD,sBAAKI,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,CAAgBC,QAAQ,cAAcC,MAAOZ,IAC7C,oDAAsB,4BAAIL,EAAmB,GAAK,QAAlD,cACA,gDAAkB,4BAAID,EAAe,GAAK,QAA1C,cACA,iDAAmB,4BAAIE,EAAgB,GAAK,QAA5C,cACA,iDAAmB,4BAAIC,EAAgB,GAAK,QAA5C,cACA,mDAAqB,4BAAIC,EAAkB,GAAK,QAAhD,cACA,kDAAoB,4BAAIC,EAAiB,GAAK,QAA9C,kBC1ONc,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.60c6ea71.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  var data = {\r\n    movies: [],\r\n    characters: [],\r\n    planets: [],\r\n    species: [],\r\n    starships: [],\r\n    vehicles: [],\r\n  };\r\n  const [moviesLoaded, setMoviesLoaded] = useState(false);\r\n  const [charactersLoaded, setCharactersLoaded] = useState(false);\r\n  const [planetsLoaded, setPlanetsLoaded] = useState(false);\r\n  const [speciesLoaded, setSpeciesLoaded] = useState(false);\r\n  const [starshipsLoaded, setStarshipsLoaded] = useState(false);\r\n  const [vehiclesLoaded, setVehiclesLoaded] = useState(false);\r\n\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const loadCharacters = () => {\r\n    fetch(\"https://swapi.dev/api/people/\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        const peopleCount = response.count;\r\n        var fetches = [];\r\n        for (let i = 0; i < peopleCount; i++) {\r\n          fetches.push(\r\n            fetch(`http://swapi.dev/api/people/${i + 1}/`)\r\n              .then((response) => response.json())\r\n              .then((response) => {\r\n                if (!(\"detail\" in response)) {\r\n                  data.characters.push(response);\r\n                  // console.log(response);\r\n                  // console.log(data.characters.length);\r\n                  // console.log(progress)\r\n                  setProgress(progress+100/peopleCount)\r\n                }\r\n              })\r\n          );\r\n        }\r\n        Promise.all(fetches).then(() => {\r\n          setCharactersLoaded(true);\r\n          console.log(progress)\r\n        });\r\n      });\r\n  }\r\n\r\n  const loadMovies = () => {\r\n    fetch(\"https://swapi.dev/api/films/\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        const movieCount = response.count;\r\n        var fetches = [];\r\n        for (let i = 0; i < movieCount; i++) {\r\n          fetches.push(\r\n            fetch(`http://swapi.dev/api/films/${i + 1}/`)\r\n              .then((response) => response.json())\r\n              .then((response) => {\r\n                if (!(\"detail\" in response)) {\r\n                  data.movies.push(response);\r\n                  // console.log(response);\r\n                  // console.log(data.movies.length);\r\n                }\r\n              })\r\n          );\r\n        }\r\n        Promise.all(fetches).then(() => {\r\n          setMoviesLoaded(true);\r\n        });\r\n      });\r\n  }\r\n\r\n  const loadPlanets = () => {\r\n    fetch(\"https://swapi.dev/api/planets/\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        const planetCount = response.count;\r\n        var fetches = [];\r\n        for (let i = 0; i < planetCount; i++) {\r\n          fetches.push(\r\n            fetch(`http://swapi.dev/api/planets/${i + 1}/`)\r\n              .then((response) => response.json())\r\n              .then((response) => {\r\n                if (!(\"detail\" in response)) {\r\n                  data.planets.push(response);\r\n                  // console.log(response);\r\n                  // console.log(data.planets.length);\r\n                }\r\n              })\r\n          );\r\n        }\r\n        Promise.all(fetches).then(() => {\r\n          setPlanetsLoaded(true);\r\n        });\r\n      });\r\n  }\r\n\r\n  const loadSpecies = () => {\r\n    fetch(\"https://swapi.dev/api/species/\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        const speciesCount = response.count;\r\n        var fetches = [];\r\n        for (let i = 0; i < speciesCount; i++) {\r\n          fetches.push(\r\n            fetch(`http://swapi.dev/api/species/${i + 1}/`)\r\n              .then((response) => response.json())\r\n              .then((response) => {\r\n                if (!(\"detail\" in response)) {\r\n                  data.species.push(response);\r\n                  // console.log(response);\r\n                  // console.log(data.planets.length);\r\n                }\r\n              })\r\n          );\r\n        }\r\n        Promise.all(fetches).then(() => {\r\n          setSpeciesLoaded(true);\r\n        });\r\n      });\r\n  }\r\n\r\n  const loadSpaceships = () => {\r\n    fetch(\"https://swapi.dev/api/starships/\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        const starshipCount = response.count;\r\n        var fetches = [];\r\n        for (let i = 0; i < starshipCount; i++) {\r\n          fetches.push(\r\n            fetch(`http://swapi.dev/api/starships/${i + 1}/`)\r\n              .then((response) => response.json())\r\n              .then((response) => {\r\n                if (!(\"detail\" in response)) {\r\n                  data.starships.push(response);\r\n                  // console.log(response);\r\n                  // console.log(data.planets.length);\r\n                }\r\n              })\r\n          );\r\n        }\r\n        Promise.all(fetches).then(() => {\r\n          setStarshipsLoaded(true);\r\n        });\r\n      });\r\n  }\r\n\r\n  const loadVehicles = () => {\r\n    fetch(\"https://swapi.dev/api/vehicles/\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        const vehicleCount = response.count;\r\n        var fetches = [];\r\n        for (let i = 0; i < vehicleCount; i++) {\r\n          fetches.push(\r\n            fetch(`http://swapi.dev/api/vehicles/${i + 1}/`)\r\n              .then((response) => response.json())\r\n              .then((response) => {\r\n                if (!(\"detail\" in response)) {\r\n                  data.vehicles.push(response);\r\n                  // console.log(response);\r\n                  // console.log(data.planets.length);\r\n                }\r\n              })\r\n          );\r\n        }\r\n        Promise.all(fetches).then(() => {\r\n          setVehiclesLoaded(true);\r\n        });\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.PUBLIC_URL}/data2.json`)\r\n      .then(response => response.json())\r\n      .then(response => console.log(response))\r\n\r\n    // loadMovies();\r\n    // loadCharacters();\r\n    // loadPlanets();\r\n    // loadSpecies();\r\n    // loadSpaceships();\r\n    // loadVehicles();\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <LinearProgress variant=\"determinate\" value={progress} />\r\n      <p>The characters are <b>{charactersLoaded ? '' : 'not'}</b> loaded.</p>\r\n      <p>The movies are <b>{moviesLoaded ? '' : 'not'}</b> loaded.</p>\r\n      <p>The planets are <b>{planetsLoaded ? '' : 'not'}</b> loaded.</p>\r\n      <p>The species are <b>{speciesLoaded ? '' : 'not'}</b> loaded.</p>\r\n      <p>The starships are <b>{starshipsLoaded ? '' : 'not'}</b> loaded.</p>\r\n      <p>The vehicles are <b>{vehiclesLoaded ? '' : 'not'}</b> loaded.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}